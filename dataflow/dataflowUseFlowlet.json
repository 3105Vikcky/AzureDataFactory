{
	"name": "dataflowUseFlowlet",
	"properties": {
		"description": "This is the asm student data want to remove duplicate name entry item from it.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "asmstudentdataflow",
						"type": "DatasetReference"
					},
					"name": "asmStudent",
					"description": "This is ASM college student data. "
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "pratibhaclgStudent"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "flowlet1Use",
					"flowlet": {
						"referenceName": "flowlet1",
						"type": "DataFlowReference"
					}
				},
				{
					"name": "flowlet1",
					"flowlet": {
						"referenceName": "flowlet1",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          rollno as string,",
				"          Full_name as string,",
				"          marks as string,",
				"          grade as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> asmStudent",
				"source(output(",
				"          rollno as string,",
				"          Full_name as string,",
				"          marks as string,",
				"          grade as string,",
				"          city as string,",
				"          DOB as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> pratibhaclgStudent",
				"asmStudent compose(mapColumn(",
				"          rollno,",
				"          Full_name,",
				"          marks,",
				"          grade,",
				"          city",
				"     ),",
				"     composition: 'flowlet1') ~> flowlet1Use@(output1)",
				"pratibhaclgStudent compose(mapColumn(",
				"          rollno,",
				"          Full_name,",
				"          marks,",
				"          grade,",
				"          city",
				"     ),",
				"     composition: 'flowlet1') ~> flowlet1@(output1)",
				"flowlet1Use@output1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Employee ID} as string,",
				"          {Survey Date} as string,",
				"          {Engagement Score} as string,",
				"          {Satisfaction Score} as string,",
				"          {Work-Life Balance Score} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Full_name,",
				"          marks,",
				"          grade,",
				"          city",
				"     )) ~> sink1",
				"flowlet1@output1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Employee ID} as string,",
				"          {Survey Date} as string,",
				"          {Engagement Score} as string,",
				"          {Satisfaction Score} as string,",
				"          {Work-Life Balance Score} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}